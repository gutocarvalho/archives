<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>vagrant on Guto Carvalho Archives</title><link>http://archive.gutocarvalho.net/categories/vagrant/</link><description>Recent content in vagrant on Guto Carvalho Archives</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 24 Sep 2016 11:07:06 -0300</lastBuildDate><atom:link href="http://archive.gutocarvalho.net/categories/vagrant/index.xml" rel="self" type="application/rss+xml"/><item><title>Nova Vagrant BOX com CentOS 7.2.1511 e GitLab CE 8.12.0</title><link>http://archive.gutocarvalho.net/post/2016-09-24-vagrant-box-gitlab-812/</link><pubDate>Sat, 24 Sep 2016 11:07:06 -0300</pubDate><guid>http://archive.gutocarvalho.net/post/2016-09-24-vagrant-box-gitlab-812/</guid><description>Divulgando nova box CentOS 7.2 com GitLab CE 8.12.0 no atlas. Agora fica mais fácil testar a última versão do Gitlab com o menor esforço possível :)
1. Instalando a box Se você usa vagrant 1.8.x para fazer download da box digite
vagrant box add gutocarvalho/centos7x64-gitlab-ce Crie um diretório para o projeto
mkdir centos7-gitlab-ce; cd centos7-gitlab-ce Crie um arquivo Vagrantfile no diretorio com o conteúdo abaixo
# -*- mode: ruby -*- # vi: set ft=ruby : VAGRANTFILE_API_VERSION = &amp;quot;2&amp;quot; Vagrant.</description></item><item><title>Vagrant 1.8.5 ssh retrying bugfix</title><link>http://archive.gutocarvalho.net/post/2016-09-24-vagrant-185-ssh-retrying-bugfix/</link><pubDate>Sat, 24 Sep 2016 10:31:29 -0300</pubDate><guid>http://archive.gutocarvalho.net/post/2016-09-24-vagrant-185-ssh-retrying-bugfix/</guid><description>O Vagrant 1.8.5 tem um bug crítico em guests linux, o vagrant simplesmente não consegue terminar o vagrant up por causa de um bug na geração do arquivo authorized_keys que contém as chaves permitidas para acesso ssh por chaves no guest. O problema é que o vagrant está gerando o arquivo com a permissão errada e o subsistema ssh — neste casos — ignora o arquivo por questões de segurança.</description></item><item><title>Nova box vagrant com Puppet Server 2.6.0 em CentOS 7</title><link>http://archive.gutocarvalho.net/post/2016-09-18-puppetserver-centos7-box-atlas/</link><pubDate>Sun, 18 Sep 2016 12:08:56 -0300</pubDate><guid>http://archive.gutocarvalho.net/post/2016-09-18-puppetserver-centos7-box-atlas/</guid><description>Divulgando nova box CentOS 7.2 com Puppet 4.6.2 e Puppet Server 2.6.0 no atlas. Agora fica mais fácil testar a última versão do Puppet Server com o menor esforço possível :)
1. Instalando a box Se você usa vagrant 1.8.x para fazer download da box digite
vagrant box add gutocarvalho/centos7x64-puppetserver Crie um diretório para o projeto
mkdir centos7-puppetserver; cd centos7-puppetserver Crie um arquivo Vagrantfile no diretorio com o conteúdo abaixo</description></item><item><title>Boxes vagrant atualizadas no atlas</title><link>http://archive.gutocarvalho.net/post/2016-09-03-vagrant-box-atualizadas/</link><pubDate>Sat, 03 Sep 2016 08:46:18 -0300</pubDate><guid>http://archive.gutocarvalho.net/post/2016-09-03-vagrant-box-atualizadas/</guid><description>Meu repositório de box para vagrant foi atualizado ontem, agora todas as box tem Puppet 4 na última versão disponível para aquele sistema operacional.
Repositório Atlas https://atlas.hashicorp.com/gutocarvalho/ CentOS CentOS 5.11 https://atlas.hashicorp.com/gutocarvalho/boxes/centos5x64 Puppet 4.6.2 Virtualbox Guest 5.0.26 CentOS 6.8 https://atlas.hashicorp.com/gutocarvalho/boxes/centos6x64 Puppet 4.6.2 Virtualbox Guest 5.0.26 CentOS 7.2.1511 https://atlas.hashicorp.com/gutocarvalho/boxes/centos7x64 Puppet 4.6.2 Virtualbox Guest 5.0.26 Debian Debian 6.0.10 https://atlas.hashicorp.com/gutocarvalho/boxes/debian6x64 Puppet 4.4.1 Virtualbox Guest 5.</description></item><item><title>Foi liberado o PCP 1.0.2</title><link>http://archive.gutocarvalho.net/post/2016-05-10-pcp-nova-versao/</link><pubDate>Tue, 10 May 2016 11:36:59 -0300</pubDate><guid>http://archive.gutocarvalho.net/post/2016-05-10-pcp-nova-versao/</guid><description>O projeto PCP está em casa nova e com nova versão. Movemos o projeto para a organização Puppet-BR no github para facilitar a contribuição. Agora a documentação está toda em inglês o que facilita o uso para pessoas de qualquer parte do mundo.
https://github.com/puppet-br/pcp https://github.com/puppet-br/pcp-controlrepo Já fizemos a homologação das versões mais recentes do puppet nesta release:
Puppet Server 2.3.2 Puppet Agent 1.4.2 Mcollective 2.8.8 PuppetDB 4.0.2 PostgreSQL 9.</description></item><item><title>Projeto PCP</title><link>http://archive.gutocarvalho.net/post/2016-03-27-projetopcp/</link><pubDate>Sun, 27 Mar 2016 14:14:16 -0300</pubDate><guid>http://archive.gutocarvalho.net/post/2016-03-27-projetopcp/</guid><description>Lancei em parceria com o Miguel Filho o projeto PCP - Puppet Community Platform.
O projeto PCP tem o objetivo de fornecer uma plataforma Puppet 4 completa, com Puppet Server, Puppet Agent, PuppetDB, Mcollective e Puppet Explorer. Tudo é instalado e integrado de forma automatizada.
Esta plataforma é ideal para testes, avaliações da tecnologia Puppet e desenvolvimento de módulos e fatos para o Puppet 4.
Acesse o projeto:
http://github.com/gutocarvalho/pcp Você pode contribuir enviando PR (Pull Request).</description></item><item><title>Módulos para Puppet 4</title><link>http://archive.gutocarvalho.net/post/2015-09-25-modulos-para-puppet-4/</link><pubDate>Fri, 25 Sep 2015 00:00:00 +0000</pubDate><guid>http://archive.gutocarvalho.net/post/2015-09-25-modulos-para-puppet-4/</guid><description>Publiquei os módulos puppet referentes aos seguintes posts do meu blog:
http://gutocarvalho.net/octopress/2015/09/09/activemq-e-mcollective-com-ssl/ http://gutocarvalho.net/octopress/2015/08/21/activemq-e-mcollective-no-puppet-4/ http://gutocarvalho.net/octopress/2015/08/18/instalando-puppet-4-agent-and-master/ É bom aprender como as coisas funcionam de perto, a rotina de instalação manual é importante para conhecer cada componente do puppet, o objetivo destes posts foi estudar o puppet 4 a fundo, mas nada como fazer tudo aquilo que está descrito no post rapidamente e com um único comando, é para isto que servem os módulos.</description></item><item><title>Vagrant Boxes com Puppet 4.2.2 Publicadas</title><link>http://archive.gutocarvalho.net/post/2015-09-25-vagrant-boxes-publicadas/</link><pubDate>Fri, 25 Sep 2015 00:00:00 +0000</pubDate><guid>http://archive.gutocarvalho.net/post/2015-09-25-vagrant-boxes-publicadas/</guid><description>Eu uso muito o Vagrant para fazer testes e desenvolver módulos puppet, por anos usei as vagrant-box feitas pela Puppetlabs, elas sempre foram eficientes e confiáveis para trabalhar e fazer os meus testes, mas com o recente lançamento do Puppet 4 percebi que a puppetlabs não estava atualizando suas boxes, portanto, resolvi estudar o packer e criar cada box que eu precisava para homologar módulos puppet.
O resultado disto foi a criação das seguintes box:</description></item><item><title>Vagrant com Provisioner Puppet Apply</title><link>http://archive.gutocarvalho.net/post/2014-05-13-vagrant-com-provisioner-puppet-apply/</link><pubDate>Tue, 13 May 2014 00:00:00 +0000</pubDate><guid>http://archive.gutocarvalho.net/post/2014-05-13-vagrant-com-provisioner-puppet-apply/</guid><description>1. Provisioners Após a introdução ao vagrant fizemos uma rápida passagem pelo conceito de multi machines para então entrarmos em provisionamento, começamos com provisionamento em shell e agora vamos falar de Puppet e Vagrant.
Como eu já disse a vocês, o vagrant tem suporte a diversos provisionadores, isto significa que você pode automatizar a instalação e configuração de sua VM, tornando isto parte do processo vagrant up.
O vagrant atualmente suporta os seguintes provisionadores</description></item><item><title>Provisionando com Vagrant</title><link>http://archive.gutocarvalho.net/post/2014-05-12-provisionando-com-vagrant/</link><pubDate>Mon, 12 May 2014 00:00:00 +0000</pubDate><guid>http://archive.gutocarvalho.net/post/2014-05-12-provisionando-com-vagrant/</guid><description>1. Provisioners Após a introdução ao vagrant e uma rápida passagem pelo conceito de multi machines, vamos começar a entrar no provisionamento.
Como eu já disse a vocês, o vagrant tem suporte a diversos provisionadores, isto significa que você pode automatizar a instalação e configuração de sua VM, tornando isto parte do processo vagrant up.
O vagrant atualmente suporta os seguintes provisionadores
File Shell Ansible CFEngine Chef Solo Chef Client Docker Puppet Apply Puppet Agent Salt Eu vou abordar neste post o provisionamento shell.</description></item><item><title>Vagrant Multi Machines</title><link>http://archive.gutocarvalho.net/post/2014-05-12-vagrant-multi-machines/</link><pubDate>Mon, 12 May 2014 00:00:00 +0000</pubDate><guid>http://archive.gutocarvalho.net/post/2014-05-12-vagrant-multi-machines/</guid><description>1. Conceito Multi Machines Após a introdução ao vagrant no post anterior, vamos falar rapidamente sobre multi machines.
O conceito é simples, com &amp;ldquo;multi machines&amp;rdquo; você pode subir várias VMs de uma vez só.
Imagine um ambiente LAMP, você pode ter uma VM para o Apache e outra para o MYSQL, tudo no mesmo projeto/diretório/vagranfile.
1.1 Características do ambiente VM1
VM1 (apache) Base box CentOS 6.5 64Bits 1 Processador 600 MB de RAM NIC 1 em modo NAT NIC 2 c/ ip 192.</description></item><item><title>Entenda o vagrant</title><link>http://archive.gutocarvalho.net/post/2014-05-09-entenda-o-vagrant/</link><pubDate>Fri, 09 May 2014 00:00:00 +0000</pubDate><guid>http://archive.gutocarvalho.net/post/2014-05-09-entenda-o-vagrant/</guid><description>1. Sobre o Vagrant O Vagrant é uma ferramenta que permite que criemos rapidamente ambientes virtuais para fazermos testes, desenvolvimento ou provisionmento de ambientes utilizando as soluções de virtualização mais comuns como o Virtualbox e o VMWare, sendo também compatível com os principais provedores cloud como AWS, Rackspace e Digitalocean. Além disto, tem suporte a várias tecnologias de provisionamento como Puppet, Chef, Salt, Ansible e CFEngine, com isto, você já cria e configura o ambiente em um único processo, é realmente mágico.</description></item></channel></rss>